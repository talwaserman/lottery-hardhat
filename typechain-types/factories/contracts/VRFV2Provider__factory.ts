/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VRFV2Provider,
  VRFV2ProviderInterface,
} from "../../contracts/VRFV2Provider";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RequestFailedByGasLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addToAllowList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromAllowList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callerRequestId",
        type: "uint256",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040527f474e34a077df58807dbe9c96d3c009b23b3c6d0cce433e59bbf5b34f823bc56c60001b6008556207a120600960006101000a81548163ffffffff021916908363ffffffff1602179055506003600960046101000a81548161ffff021916908361ffff1602179055506001600960066101000a81548163ffffffff021916908363ffffffff1602179055503480156200009c57600080fd5b5060405162001e3d38038062001e3d8339818101604052810190620000c291906200040a565b33806000738103b0a8a00be2ddc778e6e7eaa21791cd3646258073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000179906200049d565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620002095762000208816200029160201b60201c565b5b505050738103b0a8a00be2ddc778e6e7eaa21791cd364625600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505062000531565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000302576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002f9906200050f565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600067ffffffffffffffff82169050919050565b620003e481620003c5565b8114620003f057600080fd5b50565b6000815190506200040481620003d9565b92915050565b600060208284031215620004235762000422620003c0565b5b60006200043384828501620003f3565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620004856018836200043c565b915062000492826200044d565b602082019050919050565b60006020820190508181036000830152620004b88162000476565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000620004f76017836200043c565b91506200050482620004bf565b602082019050919050565b600060208201905081810360008301526200052a81620004e8565b9050919050565b6080516118e96200055460003960008181610228015261027c01526118e96000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a168fa8911610071578063a168fa891461013e578063bc85777c1461016f578063d8a4676f1461019f578063eba8dabc146101d0578063f2fde38b146101ec578063fc2a88c314610208576100a9565b80631fe543e3146100ae57806331f59102146100ca57806379ba5097146100e65780638796ba8c146100f05780638da5cb5b14610120575b600080fd5b6100c860048036038101906100c39190611139565b610226565b005b6100e460048036038101906100df91906111f3565b6102e6565b005b6100ee610349565b005b61010a60048036038101906101059190611220565b6104de565b604051610117919061125c565b60405180910390f35b610128610502565b6040516101359190611286565b60405180910390f35b61015860048036038101906101539190611220565b61052b565b6040516101669291906112bc565b60405180910390f35b61018960048036038101906101849190611220565b610569565b604051610196919061125c565b60405180910390f35b6101b960048036038101906101b49190611220565b6108fc565b6040516101c79291906113a3565b60405180910390f35b6101ea60048036038101906101e591906111f3565b610a27565b005b610206600480360381019061020191906111f3565b610a8a565b005b610210610a9e565b60405161021d919061125c565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016102cf9291906113d3565b60405180910390fd5b6102e28282610aa4565b5050565b6102ee610d70565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d090611459565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600681815481106104ee57600080fd5b906000526020600020016000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b6000610573610502565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105fc575060011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515145b61063b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610632906114c5565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d30600854600560149054906101000a900467ffffffffffffffff16600960049054906101000a900461ffff16600960009054906101000a900463ffffffff16600960069054906101000a900463ffffffff166040518663ffffffff1660e01b81526004016106ea95949392919061155d565b6020604051808303816000875af1158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906115c5565b90506040518060600160405280600015158152602001600115158152602001600067ffffffffffffffff81111561076757610766610ff6565b5b6040519080825280602002602001820160405280156107955781602001602082028036833780820191505090505b508152506004600083815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055506040820151816001019080519060200190610808929190610f2c565b50905050600681908060018154018082558091505060019003906000526020600020016000909190919091505580600781905550336002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160026000838152602001908152602001600020600101819055507fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee81600960069054906101000a900463ffffffff166040516108ef9291906115f2565b60405180910390a1919050565b600060606004600084815260200190815260200160002060000160019054906101000a900460ff16610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a90611667565b60405180910390fd5b6000600460008581526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff1615151515815260200160018201805480602002602001604051908101604052809291908181526020018280548015610a0857602002820191906000526020600020905b8154815260200190600101908083116109f4575b5050505050815250509050806000015181604001519250925050915091565b610a2f610d70565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b610a92610d70565b610a9b81610e00565b50565b60075481565b6004600083815260200190815260200160002060000160019054906101000a900460ff16610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe90611667565b60405180910390fd5b60016004600084815260200190815260200160002060000160006101000a81548160ff02191690831515021790555080600460008481526020019081526020016000206001019080519060200190610b60929190610f2c565b5060006002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166207a120836002600087815260200190815260200160002060010154604051602401610bdd929190611687565b6040516020818303038152906040527f33c8b230000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c679190611728565b60006040518083038160008787f1925050503d8060008114610ca5576040519150601f19603f3d011682016040523d82523d6000602084013e610caa565b606091505b505090506000151581151503610cf2577f4405f5c0434912221b5a3c5b21a2e4cef3d33d6ea63db3a3fe5fab42a757ef6983604051610ce9919061125c565b60405180910390a15b80610d32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d299061178b565b60405180910390fd5b7ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d8383604051610d639291906117ab565b60405180910390a1505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df590611827565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6590611893565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b828054828255906000526020600020908101928215610f68579160200282015b82811115610f67578251825591602001919060010190610f4c565b5b509050610f759190610f79565b5090565b5b80821115610f92576000816000905550600101610f7a565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610fbd81610faa565b8114610fc857600080fd5b50565b600081359050610fda81610fb4565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61102e82610fe5565b810181811067ffffffffffffffff8211171561104d5761104c610ff6565b5b80604052505050565b6000611060610f96565b905061106c8282611025565b919050565b600067ffffffffffffffff82111561108c5761108b610ff6565b5b602082029050602081019050919050565b600080fd5b60006110b56110b084611071565b611056565b905080838252602082019050602084028301858111156110d8576110d761109d565b5b835b8181101561110157806110ed8882610fcb565b8452602084019350506020810190506110da565b5050509392505050565b600082601f8301126111205761111f610fe0565b5b81356111308482602086016110a2565b91505092915050565b600080604083850312156111505761114f610fa0565b5b600061115e85828601610fcb565b925050602083013567ffffffffffffffff81111561117f5761117e610fa5565b5b61118b8582860161110b565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111c082611195565b9050919050565b6111d0816111b5565b81146111db57600080fd5b50565b6000813590506111ed816111c7565b92915050565b60006020828403121561120957611208610fa0565b5b6000611217848285016111de565b91505092915050565b60006020828403121561123657611235610fa0565b5b600061124484828501610fcb565b91505092915050565b61125681610faa565b82525050565b6000602082019050611271600083018461124d565b92915050565b611280816111b5565b82525050565b600060208201905061129b6000830184611277565b92915050565b60008115159050919050565b6112b6816112a1565b82525050565b60006040820190506112d160008301856112ad565b6112de60208301846112ad565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61131a81610faa565b82525050565b600061132c8383611311565b60208301905092915050565b6000602082019050919050565b6000611350826112e5565b61135a81856112f0565b935061136583611301565b8060005b8381101561139657815161137d8882611320565b975061138883611338565b925050600181019050611369565b5085935050505092915050565b60006040820190506113b860008301856112ad565b81810360208301526113ca8184611345565b90509392505050565b60006040820190506113e86000830185611277565b6113f56020830184611277565b9392505050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006114436016836113fc565b915061144e8261140d565b602082019050919050565b6000602082019050818103600083015261147281611436565b9050919050565b7f43616c6c6572206973206e6f7420617574686f72697a65640000000000000000600082015250565b60006114af6018836113fc565b91506114ba82611479565b602082019050919050565b600060208201905081810360008301526114de816114a2565b9050919050565b6000819050919050565b6114f8816114e5565b82525050565b600067ffffffffffffffff82169050919050565b61151b816114fe565b82525050565b600061ffff82169050919050565b61153881611521565b82525050565b600063ffffffff82169050919050565b6115578161153e565b82525050565b600060a08201905061157260008301886114ef565b61157f6020830187611512565b61158c604083018661152f565b611599606083018561154e565b6115a6608083018461154e565b9695505050505050565b6000815190506115bf81610fb4565b92915050565b6000602082840312156115db576115da610fa0565b5b60006115e9848285016115b0565b91505092915050565b6000604082019050611607600083018561124d565b611614602083018461154e565b9392505050565b7f72657175657374206e6f7420666f756e64000000000000000000000000000000600082015250565b60006116516011836113fc565b915061165c8261161b565b602082019050919050565b6000602082019050818103600083015261168081611644565b9050919050565b600060408201905081810360008301526116a18185611345565b90506116b0602083018461124d565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156116eb5780820151818401526020810190506116d0565b60008484015250505050565b6000611702826116b7565b61170c81856116c2565b935061171c8185602086016116cd565b80840191505092915050565b600061173482846116f7565b915081905092915050565b7f476173206c696d697420776173206e6f742073756666696369656e7400000000600082015250565b6000611775601c836113fc565b91506117808261173f565b602082019050919050565b600060208201905081810360008301526117a481611768565b9050919050565b60006040820190506117c0600083018561124d565b81810360208301526117d28184611345565b90509392505050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006118116016836113fc565b915061181c826117db565b602082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061187d6017836113fc565b915061188882611847565b602082019050919050565b600060208201905081810360008301526118ac81611870565b905091905056fea264697066735822122062b1b0396780de099901a206d5090e4c6b3236a018301afcc664b1b4e5a83eac64736f6c63430008140033";

type VRFV2ProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFV2ProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFV2Provider__factory extends ContractFactory {
  constructor(...args: VRFV2ProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(subscriptionId, overrides || {});
  }
  override deploy(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(subscriptionId, overrides || {}) as Promise<
      VRFV2Provider & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VRFV2Provider__factory {
    return super.connect(runner) as VRFV2Provider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFV2ProviderInterface {
    return new Interface(_abi) as VRFV2ProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VRFV2Provider {
    return new Contract(address, _abi, runner) as unknown as VRFV2Provider;
  }
}
